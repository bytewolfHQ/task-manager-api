version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: taskmanager_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-taskmanager}
      POSTGRES_USER: ${POSTGRES_USER:-taskuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-taskpass}
    ports:
      - "5432:5432"
    volmunes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint.initdb.d
    networks:
      - taskmanager_network

  # pgAdmin - Web UI for PostgreSQL
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: taskmanger_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@task}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PAASWORD:-admin}
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - taskmanager_network

  # PHP-FPM + Symfony Backend
  backend:
    build:
      context: ./docker
      dockerfile: Dockerfile.backend
    container_name: taskmanger_backend
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./backend:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-taskuser}:${POSTGRES_PASSWORD:-taskpass}@postgres:5432/${POSTGRES_DB:-taskmanager}
      - APP_ENV=${APP_ENV:-dev}
      - APP_DEBUG=${APP_DEBUG:-1}
    depends_on:
      - postgres
    networks:
      - taskmanager_network

  # Nginx - Web Server
  nginx:
    image: nginx:alpine
    container_name: taskmanager_nginx
    restart: unless-stopped
    ports:
      - "3000:80"
    volumes:
      - ./backend:/var/www/html
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - taskmanager_network

  # Frontend Devolpment Server
  frontend:
    build:
      context: ./docker
      dockerfile: Dockerfile.frontend
    container_name: taskmanager_frontend
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./frontend:/app
      - /app/node_modules   # Anonymous volume for node_modules
    ports:
      - "5173:5173"
    environment:
      - VITE_API_BASE_URL=http://localhost:3000/api
    depends_on:
      - nginx
    networks:
      - tasmanager_network
    command: npm run dev

  volumes:
    postgres_data:
    pgadmin_data:

  networks:
    taskmanager_network:
      driver: bridge
